-- MySQL Script generated by MySQL Workbench
-- Fri May  4 13:18:56 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Foodboard
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Foodboard
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Foodboard` DEFAULT CHARACTER SET utf8 ;
USE `Foodboard` ;

-- -----------------------------------------------------
-- Table `Foodboard`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Foodboard`.`User` (
  `UserID` INT NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NOT NULL COMMENT 'Holds contact first name',
  `LastName` VARCHAR(45) NOT NULL COMMENT 'Holds user last name',
  `Email` VARCHAR(45) NOT NULL COMMENT 'Holds user email\n',
  `SuiteNumber` INT(10) NOT NULL COMMENT 'Holds user\'s apartment suite number\n',
  `Password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`UserID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Foodboard`.`FoodItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Foodboard`.`FoodItem` (
  `ItemID` INT NOT NULL AUTO_INCREMENT,
  `FoodName` VARCHAR(45) NOT NULL COMMENT 'Holds the name of the food item\n',
  `FoodDescription` VARCHAR(255) NOT NULL,
  `FoodImage` VARCHAR(255) NOT NULL COMMENT 'Holds the image of the food item\n',
  `FoodExpiryTime` VARCHAR(255) NOT NULL COMMENT 'Holds the expiry date of the food item\n',
  `FoodGroup` VARCHAR(45) NOT NULL COMMENT 'Holds the food group of the item',
  PRIMARY KEY (`ItemID`));


-- -----------------------------------------------------
-- Table `Foodboard`.`Posting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Foodboard`.`Posting` (
  `PostID` INT NOT NULL AUTO_INCREMENT,
  `FoodItem_ItemID` INT NOT NULL,
  `User_UserID` INT NOT NULL,
  `ClaimedStatus` VARCHAR(10) NOT NULL DEFAULT 0,
  PRIMARY KEY (`PostID`, `FoodItem_ItemID`, `User_UserID`),
  INDEX `fk_Posting_FoodItem1_idx` (`FoodItem_ItemID` ASC),
  INDEX `fk_Posting_User1_idx` (`User_UserID` ASC),
  CONSTRAINT `fk_Posting_FoodItem1`
    FOREIGN KEY (`FoodItem_ItemID`)
    REFERENCES `Foodboard`.`FoodItem` (`ItemID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Posting_User1`
    FOREIGN KEY (`User_UserID`)
    REFERENCES `Foodboard`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Foodboard`.`FoodboardBoard`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Foodboard`.`FoodboardBoard` (
  `BoardPostID` INT NOT NULL,
  `UserPostClaimed` TINYINT NULL DEFAULT 0,
  `Posting_PostID` INT NOT NULL,
  PRIMARY KEY (`BoardPostID`, `Posting_PostID`),
  INDEX `fk_FoodboardBoard_Posting1_idx` (`Posting_PostID` ASC),
  CONSTRAINT `fk_FoodboardBoard_Posting1`
    FOREIGN KEY (`Posting_PostID`)
    REFERENCES `Foodboard`.`Posting` (`PostID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Foodboard`.`UserList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Foodboard`.`UserList` (
  `ListingID` INT NOT NULL AUTO_INCREMENT,
  `User_UserID` INT NOT NULL,
  PRIMARY KEY (`ListingID`, `User_UserID`),
  INDEX `fk_UserList_User1_idx` (`User_UserID` ASC),
  CONSTRAINT `fk_UserList_User1`
    FOREIGN KEY (`User_UserID`)
    REFERENCES `Foodboard`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
